swagger: "2.0"
info:
  title: Sunglasses API
  description: An API to support the sunglasses platform
  version: 1.0.0
host: api.Sunglasses.com
schemes:
  - https
basePath: /v1/api
produces:
  - application/json
paths:
  /brands:
    get:
      summary: Brands
      description: |
        The brands enpoint gets all the available brands
      parameters:
        - name: brands
          in: query
          description: brands query
          required: true
          type: string
      tags:
        - brands
      responses:
        "200":
          description: An array of brands
          schema:
            $ref: "#/definitions/Brands"
        default:
          description: "Unexpected Error"
          schema:
           $ref: "#/definitions/Error"
  /brands/{id}/products:
    get:
      summary: Products of each brand
      description: >
        All products in a given brand
      parameters:
        - name: id
          id: id  
          in: path
          description: the id of the brand to search for products in
          required: true
          type: string
      tags:
        - Brands Catagories
      responses:
        "200":
          description: An array of products in the brand
          schema:
            type: array
            items:
              $ref: "#/definitions/Brands"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /products:
    get:
      summary: Products
      description: |
        The products endpoint gets all the available products
      parameters:
        - name: products
          in: query
          description: products query
          required: true
          type: string
      tags:
        - products
      responses:
        "200":
          description: An array of products
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/login:
    get:
      tags: 
      - user
      summary: Logs user into the system
      description: ""
      parameters:
      - name: Email
        in: query
        description: The Email for login
        required: true
        type: string
      - name: password
        in: "query"
        description: the password for for login in clear text
        required: true
        type: string
      responses:
        "200":
          description: Login is successful
          default:
            description: Unexpected error
            schema:
              $ref: "#/definitions/Error"
  /me/cart:
    get:
      summary: Users Cart
      description: |
        The User Profile endpoint returns information about the users cart
      parameters:
        - name: cart
          in: path
          description: The cart of the logged in user
      tags:
        - User
      responses:
        "200":
          description: Cart information for a user
          schema:
            $ref: "#/definitions/User"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/cart/{id}:
    post:
      tags:
      - "store"
      summary: "Place an order for a product"
      description: ""
      operationId: "placeOrder"
      parameters:
      - in: "body"
        name: "body"
        description: "order placed for purchasing a product"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        "400":
          description: "Invalid Order"
  /me/cart/delete/{id}:
    delete:
      tags:
      - "delete"
      summary: Deletes a product from the cart
      description: ""
      parameters:
      - name: id
        in: path
        description: the id of the product
        required: true
        type: string
      responses:
        "200":
          description: Delete succesful
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  /me/cart/add/{id}:
    post:
      tags:
      - post product
      summary: update item in cart
      description: |
        This endpoint updates an item in the cart
      parameters:
        - name: id
          in: path
          description: The id of the product thats updated
          required: true
      responses:
        "200":
          description: Achievement is successful
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
  

    get:
      summary: Goals in Category
      description: >
        All the goals in a given category
      parameters:
        - name: id
          in: path
          description: The id of the category to search for goals in.
          required: true
          type: string
      tags:
        - Categories
      responses:
        "200":
          description: An array of goals in the category
          schema:
            type: array
            items:
              $ref: "#/definitions/Goal"
        default:
          description: Unexpected error
          schema:
            $ref: "#/definitions/Error"
definitions:
    Brands:
      type: object
      properties:
        id: 
         type: string
         description: Unique identifier for a brand.
      description: ""
       type: string
       description: Description of product. 
    Products:
      type: object
      properties:
        id: id
        description: Products
        type: Array
      description: Description of product. 
    Error:
     type: object
     properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  





